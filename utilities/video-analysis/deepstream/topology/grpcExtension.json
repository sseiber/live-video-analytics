{
  "@apiVersion": "2.0",
  "name": "InferencingWithGrpcExtension",
  "properties": {
    "description": "Record events from external models through gRPC Extension",
    "parameters": [
      {
        "name": "rtspUrl",
        "type": "String",
        "description": "Rtsp source Url address"
      },
      {
        "name": "rtspUserName",
        "type": "String",
        "description": "Rtsp source user name.",
        "default": "dummyUsername"
      },
      {
        "name": "rtspPassword",
        "type": "String",
        "description": "Rtsp source password.",
        "default": "dummyPassword"
      },

      {
        "name": "grpcExtensionAddress",
        "type": "String",
        "description": "grpc LVA Extension Address",
        "default": "tcp://lvaExtension:5001"
      },
      {
        "name": "grpcExtensionUserName",
        "type": "String",
        "description": "inferencing endpoint user name.",
        "default": "dummyUserName"
      },
      {
        "name": "grpcExtensionPassword",
        "type": "String",
        "description": "inferencing endpoint password.",
        "default": "dummyPassword"
      },
      {
        "name": "hubSinkOutputName",
        "type": "String",
        "description": "Hub sink output name",
        "default": "iothubsinkoutput"
      },
      {
        "name": "imageRawFormat",
        "type": "String",
        "description": "image format",
        "default": "bgr24"
      },
      {
        "name": "imageScaleMode",
        "type": "String",
        "description": "image scaling mode",
        "default": "pad"
      },
      {
        "name": "frameWidth",
        "type": "String",
        "description": "Width of the video frame to be received from LVA.",
        "default": "640"
      },
      {
        "name": "frameHeight",
        "type": "String",
        "description": "Height of the video frame to be received from LVA.",
        "default": "360"
      }
    ],
    "sources": [
      {
        "@type": "#Microsoft.Media.MediaGraphRtspSource",
        "name": "rtspSource",
        "endpoint": {
          "@type": "#Microsoft.Media.MediaGraphUnsecuredEndpoint",
          "url": "${rtspUrl}",
          "credentials": {
            "@type": "#Microsoft.Media.MediaGraphUsernamePasswordCredentials",
            "username": "${rtspUserName}",
            "password": "${rtspPassword}"
          }
        }
      }
    ],
    "processors": [
      {
        "@type": "#Microsoft.Media.MediaGraphGrpcExtension",
        "name": "grpcExtension",
        "endpoint": {
          "@type": "#Microsoft.Media.MediaGraphUnsecuredEndpoint",
          "url": "${grpcExtensionAddress}",
          "credentials": {
            "@type": "#Microsoft.Media.MediaGraphUsernamePasswordCredentials",
            "username": "${grpcExtensionUserName}",
            "password": "${grpcExtensionPassword}"
          }
        },
        "dataTransfer": {
          "mode": "sharedMemory",
          "SharedMemorySizeMiB": "100"
        },
        "samplingOptions": {
          "skipSamplesWithoutAnnotation": "false",
          "maximumSamplesPerSecond": "20"
        },
        "image": {
          "scale": {
            "mode": "${imageScaleMode}",
            "width": "${frameWidth}",
            "height": "${frameHeight}"
          },
          "format": {
            "@type": "#Microsoft.Media.MediaGraphImageFormatRaw",
            "pixelFormat": "${imageRawFormat}"
          }
        },
        "inputs": [
          {
            "nodeName": "rtspSource"
          }
        ]
      }
    ],
    "sinks": [
      {
        "@type": "#Microsoft.Media.MediaGraphIoTHubMessageSink",
        "name": "hubSink",
        "hubOutputName": "${hubSinkOutputName}",
        "inputs": [
          {
            "nodeName": "grpcExtension"
          }
        ]
      }
    ]
  }
}
